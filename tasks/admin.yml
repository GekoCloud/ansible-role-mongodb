- name: Run mongoshell commands
  shell: >
    mongo --port {{ mongodb_net_port }} {{ item.key }} --eval "{{ item.value|join('\n') }}"
  with_dict: '{{ mongodb_shell }}'

- name: Check if admin user exists
  shell: >
    mongo --port {{ mongodb_net_port }} test -u {{ mongodb_admin_user }} -p'{{ mongodb_admin_pass }}' --authenticationDatabase admin --eval "db"
  register: mongodb_check_admin_user
  failed_when: mongodb_check_admin_user.rc > 1
  changed_when: mongodb_check_admin_user.rc == 1
  when: mongodb_create_admin_user

- name: Create admin user
  shell: >
    mongo --port {{ mongodb_net_port }} admin --eval "db.createUser({user:'{{ mongodb_admin_user }}',pwd:'{{ mongodb_admin_pass }}',roles:['root']})"
  when: mongodb_check_admin_user.changed

- name: Set mongodb users
  mongodb_user:
    login_database: 'admin'
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_pass }}'
    login_port: '{{ mongodb_net_port }}'
    name: '{{ item.name }}'
    database: '{{ item.database }}'
    password: '{{ item.password|default(omit) }}'
    roles: '{{ item.roles|default(omit) }}'
  with_items: '{{ mongodb_users }}'

- name: Rotate mongodb logs
  template:
    src: 'logrotate.j2'
    dest: '/etc/logrotate.d/mongodb'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: mongodb_enable_logrotate
